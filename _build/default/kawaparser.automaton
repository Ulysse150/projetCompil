State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On MAIN shift to state 1
-- On program shift to state 52
## Reductions:

State 1:
## Known stack suffix:
## MAIN
## LR(1) items:
program -> MAIN . BEGIN list(instruction) END EOF [ # ]
## Transitions:
-- On BEGIN shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## MAIN BEGIN
## LR(1) items:
program -> MAIN BEGIN . list(instruction) END EOF [ # ]
## Transitions:
-- On PRINT shift to state 3
-- On list(instruction) shift to state 47
-- On instruction shift to state 50
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 3:
## Known stack suffix:
## PRINT
## LR(1) items:
instruction -> PRINT . LPAR expression RPAR SEMI [ PRINT END ]
## Transitions:
-- On LPAR shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## PRINT LPAR
## LR(1) items:
instruction -> PRINT LPAR . expression RPAR SEMI [ PRINT END ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 44
## Reductions:

State 5:
## Known stack suffix:
## TRUE
## LR(1) items:
expression -> TRUE . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> TRUE

State 6:
## Known stack suffix:
## NOT
## LR(1) items:
uop -> NOT . [ TRUE NOT MINUS LPAR INT FALSE ]
## Transitions:
## Reductions:
-- On TRUE NOT MINUS LPAR INT FALSE
--   reduce production uop -> NOT

State 7:
## Known stack suffix:
## MINUS
## LR(1) items:
expression -> MINUS . INT [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
uop -> MINUS . [ TRUE NOT MINUS LPAR INT FALSE ]
## Transitions:
-- On INT shift to state 8
## Reductions:
-- On TRUE NOT MINUS LPAR INT FALSE
--   reduce production uop -> MINUS
** Conflict on INT

State 8:
## Known stack suffix:
## MINUS INT
## LR(1) items:
expression -> MINUS INT . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> MINUS INT

State 9:
## Known stack suffix:
## LPAR
## LR(1) items:
expression -> LPAR . expression RPAR [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 42
## Reductions:

State 10:
## Known stack suffix:
## INT
## LR(1) items:
expression -> INT . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> INT

State 11:
## Known stack suffix:
## FALSE
## LR(1) items:
expression -> FALSE . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> FALSE

State 12:
## Known stack suffix:
## uop
## LR(1) items:
expression -> uop . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## uop expression
## LR(1) items:
expression -> uop expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> uop expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 14:
## Known stack suffix:
## expression SUPEQ
## LR(1) items:
expression -> expression SUPEQ . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## expression SUPEQ expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression SUPEQ expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression SUPEQ expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 16:
## Known stack suffix:
## expression SUP
## LR(1) items:
expression -> expression SUP . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## expression SUP expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression SUP expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression SUP expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 18:
## Known stack suffix:
## expression STAR
## LR(1) items:
expression -> expression STAR . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## expression STAR expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression STAR expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On POW shift to state 20
-- On OR shift to state 22
-- On MOD shift to state 26
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression STAR expression
** Conflict on SUPEQ SUP OR MOD INFEQ INF DIFF DEQ AND

State 20:
## Known stack suffix:
## expression POW
## LR(1) items:
expression -> expression POW . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## expression POW expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression POW expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On OR shift to state 22
-- On MOD shift to state 26
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression POW expression
** Conflict on SUPEQ SUP OR MOD INFEQ INF DIFF DEQ AND

State 22:
## Known stack suffix:
## expression OR
## LR(1) items:
expression -> expression OR . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## expression OR expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression OR expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression OR expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 24:
## Known stack suffix:
## expression PLUS
## LR(1) items:
expression -> expression PLUS . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## expression PLUS expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression PLUS expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On OR shift to state 22
-- On MOD shift to state 26
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP RPAR PLUS OR MOD MINUS INFEQ INF DIFF DEQ AND
--   reduce production expression -> expression PLUS expression
** Conflict on SUPEQ SUP OR MOD INFEQ INF DIFF DEQ AND

State 26:
## Known stack suffix:
## expression MOD
## LR(1) items:
expression -> expression MOD . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## expression MOD expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression MOD expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression MOD expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 28:
## Known stack suffix:
## expression MINUS
## LR(1) items:
expression -> expression MINUS . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## expression MINUS expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression MINUS expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On OR shift to state 22
-- On MOD shift to state 26
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP RPAR PLUS OR MOD MINUS INFEQ INF DIFF DEQ AND
--   reduce production expression -> expression MINUS expression
** Conflict on SUPEQ SUP OR MOD INFEQ INF DIFF DEQ AND

State 30:
## Known stack suffix:
## expression INFEQ
## LR(1) items:
expression -> expression INFEQ . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## expression INFEQ expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression INFEQ expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression INFEQ expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 32:
## Known stack suffix:
## expression INF
## LR(1) items:
expression -> expression INF . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## expression INF expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression INF expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression INF expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 34:
## Known stack suffix:
## expression DIV
## LR(1) items:
expression -> expression DIV . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## expression DIV expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression DIV expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On POW shift to state 20
-- On OR shift to state 22
-- On MOD shift to state 26
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression DIV expression
** Conflict on SUPEQ SUP OR MOD INFEQ INF DIFF DEQ AND

State 36:
## Known stack suffix:
## expression DIFF
## LR(1) items:
expression -> expression DIFF . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## expression DIFF expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression DIFF expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression DIFF expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 38:
## Known stack suffix:
## expression DEQ
## LR(1) items:
expression -> expression DEQ . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## expression DEQ expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression DEQ expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression DEQ expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 40:
## Known stack suffix:
## expression AND
## LR(1) items:
expression -> expression AND . expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On TRUE shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On LPAR shift to state 9
-- On INT shift to state 10
-- On FALSE shift to state 11
-- On uop shift to state 12
-- On expression shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## expression AND expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression AND expression . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> expression AND expression
** Conflict on SUPEQ SUP STAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND

State 42:
## Known stack suffix:
## LPAR expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> LPAR expression . RPAR [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On RPAR shift to state 43
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:

State 43:
## Known stack suffix:
## LPAR expression RPAR
## LR(1) items:
expression -> LPAR expression RPAR . [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
## Transitions:
## Reductions:
-- On SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND
--   reduce production expression -> LPAR expression RPAR

State 44:
## Known stack suffix:
## PRINT LPAR expression
## LR(1) items:
expression -> expression . PLUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MOD expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INFEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . OR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . MINUS expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUP expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . POW expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . STAR expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIFF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . SUPEQ expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . DIV expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . INF expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
expression -> expression . AND expression [ SUPEQ SUP STAR RPAR POW PLUS OR MOD MINUS INFEQ INF DIV DIFF DEQ AND ]
instruction -> PRINT LPAR expression . RPAR SEMI [ PRINT END ]
## Transitions:
-- On SUPEQ shift to state 14
-- On SUP shift to state 16
-- On STAR shift to state 18
-- On RPAR shift to state 45
-- On POW shift to state 20
-- On PLUS shift to state 24
-- On OR shift to state 22
-- On MOD shift to state 26
-- On MINUS shift to state 28
-- On INFEQ shift to state 30
-- On INF shift to state 32
-- On DIV shift to state 34
-- On DIFF shift to state 36
-- On DEQ shift to state 38
-- On AND shift to state 40
## Reductions:

State 45:
## Known stack suffix:
## PRINT LPAR expression RPAR
## LR(1) items:
instruction -> PRINT LPAR expression RPAR . SEMI [ PRINT END ]
## Transitions:
-- On SEMI shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## PRINT LPAR expression RPAR SEMI
## LR(1) items:
instruction -> PRINT LPAR expression RPAR SEMI . [ PRINT END ]
## Transitions:
## Reductions:
-- On PRINT END
--   reduce production instruction -> PRINT LPAR expression RPAR SEMI

State 47:
## Known stack suffix:
## MAIN BEGIN list(instruction)
## LR(1) items:
program -> MAIN BEGIN list(instruction) . END EOF [ # ]
## Transitions:
-- On END shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## MAIN BEGIN list(instruction) END
## LR(1) items:
program -> MAIN BEGIN list(instruction) END . EOF [ # ]
## Transitions:
-- On EOF shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## MAIN BEGIN list(instruction) END EOF
## LR(1) items:
program -> MAIN BEGIN list(instruction) END EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> MAIN BEGIN list(instruction) END EOF

State 50:
## Known stack suffix:
## instruction
## LR(1) items:
list(instruction) -> instruction . list(instruction) [ END ]
## Transitions:
-- On PRINT shift to state 3
-- On list(instruction) shift to state 51
-- On instruction shift to state 50
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 51:
## Known stack suffix:
## instruction list(instruction)
## LR(1) items:
list(instruction) -> instruction list(instruction) . [ END ]
## Transitions:
## Reductions:
-- On END
--   reduce production list(instruction) -> instruction list(instruction)

State 52:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

